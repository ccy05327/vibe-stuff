{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "EPIC 1: Project Setup & Foundation",
        "description": "Initial setup of the project, including authentication and deployment.",
        "priority": "critical",
        "dependencies": [],
        "status": "done"
      },
      {
        "id": 2,
        "title": "EPIC 2: Phase 1 - MVP Core Typing Experience",
        "description": "Build the essential features for a user to practice typing and see their results.",
        "priority": "critical",
        "dependencies": [
          1
        ],
        "status": "done"
      },
      {
        "id": 3,
        "title": "EPIC 3: Phase 2 - Content & Engagement",
        "description": "Expand the platform with more content, gamification, and engaging features.",
        "priority": "high",
        "dependencies": [
          2
        ],
        "status": "done"
      },
      {
        "id": 4,
        "title": "EPIC 4: UI/UX & Design Refinement",
        "description": "Polish the application's look and feel, ensuring a high-quality, accessible, and enjoyable user experience.",
        "priority": "medium",
        "dependencies": [
          2
        ],
        "status": "done",
        "subtasks": [
          {
            "id": 401,
            "title": "Review and Refine Colour Palette with Gemini",
            "description": "Ensure the colours are accessible and aesthetically pleasing.",
            "details": "Analyse the current Tailwind theme for WCAG AA contrast compliance and visual harmony. Suggest specific hex code changes to improve accessibility without compromising the brand's feel.",
            "status": "done",
            "dependencies": []
          },
          {
            "id": 402,
            "title": "Create UI Component Library with Cursor",
            "description": "Standardize all UI elements like buttons, inputs, and modals into a reusable component library.",
            "details": "In Cursor, prompt: 'Based on my existing pages, identify common UI elements (Button, Input, Card, Modal). Create a new directory `/components/ui` and generate a generic, reusable React component for each one. Use Tailwind CSS and `cva` (class-variance-authority) for flexible styling. Then, refactor one of my existing pages to use these new UI components.'",
            "status": "done",
            "dependencies": [
              205
            ]
          },
          {
            "id": 403,
            "title": "Add Page Transitions and Animations with Cursor",
            "description": "Implement smooth animations to make the user experience more fluid and engaging.",
            "details": "In Cursor, prompt: 'Integrate the `framer-motion` library into my React project. Apply a simple fade-in animation to all main page components as they mount. Also, add a subtle `whileHover` scale effect to all clickable cards and buttons in the Dashboard.'",
            "status": "done",
            "dependencies": [
              402
            ]
          }
        ]
      },
      {
        "id": 5,
        "title": "EPIC 5: Feature Expansion & Content Pages",
        "description": "Build out the remaining key pages of the application to provide a complete user experience.",
        "priority": "high",
        "dependencies": [
          4
        ],
        "status": "pending",
        "subtasks": [
          {
            "id": 501,
            "title": "Build Lessons Page with Cursor",
            "description": "Create a page that lists all available lessons, grouped by difficulty.",
            "details": "In Cursor, prompt: 'Create a new page component `Lessons.js`. Fetch all lessons from the Supabase `lessons` table. Display them in sections grouped by difficulty ('Beginner', 'Intermediate', 'Advanced'). Each lesson should be a clickable card that navigates the user to the typing test for that specific lesson.'",
            "status": "pending",
            "dependencies": []
          },
          {
            "id": 502,
            "title": "Build Progress Page with Cursor",
            "description": "Create a detailed progress page with charts and statistics.",
            "details": "In Cursor, prompt: 'Create a `Progress.js` page. Use Chart.js to create two visualisations: 1. A line chart showing the user's WPM over the last 10 lessons. 2. A bar chart showing the user's average accuracy per difficulty level. Also include stat cards for 'Total Time Practiced' and 'Best WPM'.'",
            "status": "pending",
            "dependencies": [
              501
            ]
          },
          {
            "id": 503,
            "title": "Build User Profile & Settings Pages with Cursor",
            "description": "Allow users to view their profile and update their settings.",
            "details": "In Cursor, create two pages. `Profile.js`: A simple page that displays the user's username and join date. `Settings.js`: A page that allows the user to update their username and provides a button to log out. The username update should call a Supabase function to update the `profiles` table.'",
            "status": "pending",
            "dependencies": []
          },
          {
            "id": 504,
            "title": "Build Static About Page",
            "description": "Create a simple, static 'About' page explaining the project's mission.",
            "details": "Create a new page `About.js`. Write a brief summary of why Typing Galah was created, its focus on Australian English, and a thank you to the open-source tools used.",
            "status": "pending",
            "dependencies": []
          }
        ]
      },
      {
        "id": 6,
        "title": "EPIC 6: Pre-Launch Finalisation",
        "description": "Perform final checks and balances before considering the project 'Version 1.0'.",
        "priority": "medium",
        "dependencies": [
          5
        ],
        "status": "pending",
        "subtasks": [
          {
            "id": 601,
            "title": "Conduct Cross-Browser & Mobile Testing",
            "description": "Ensure the application works and looks great on all major browsers and mobile devices.",
            "details": "Manually test the full user flow on Chrome, Firefox, and Safari. Use browser developer tools to simulate various mobile screen sizes (iPhone, Android). Fix any layout or styling issues that arise.",
            "status": "pending",
            "dependencies": []
          },
          {
            "id": 602,
            "title": "Implement User Feedback",
            "description": "Ask a few friends to test the site and provide feedback on their experience.",
            "details": "Share the live Vercel link with 3-5 testers. Ask them to complete a few lessons, play the game, and unlock an achievement. Collect their feedback on what was confusing, difficult, or enjoyable. Create small tasks to address any critical feedback.",
            "status": "pending",
            "dependencies": [
              601
            ]
          },
          {
            "id": 603,
            "title": "Final Code Cleanup & Refactor with Cursor",
            "description": "Perform a final pass on the codebase to ensure it's clean and maintainable.",
            "details": "In Cursor, go through each major component and prompt: 'Review this component. Are there any opportunities to refactor for clarity, remove unused code, or improve comments?'",
            "status": "pending",
            "dependencies": [
              602
            ]
          }
        ]
      }
    ],
    "metadata": {
      "created": "2025-07-02T11:30:00.000Z",
      "updated": "2025-07-03T06:18:00.857Z",
      "description": "Task list for the Typing Galah project, designed for an AI-assisted workflow. Now includes EPIC 5 and 6."
    }
  }
}